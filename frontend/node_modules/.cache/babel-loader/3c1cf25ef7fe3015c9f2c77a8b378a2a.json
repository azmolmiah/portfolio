{"ast":null,"code":"var _jsxFileName = \"/Users/codenation/Documents/GitHub/portfolio/frontend/src/App.js\";\nimport React, { useState, useRef } from \"react\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Canvas, extend, useThree, useFrame } from \"@react-three/fiber\";\nimport { useSpring, a } from \"@react-spring/three\";\nimport * as THREE from \"three\";\nimport { Header, Projects, Contact } from \"./container\";\nimport { Nav } from \"./components\";\nimport \"./App.scss\"; // extend({ OrbitControls });\n// const Controls = () => {\n//   const orbitRef = useRef();\n//   const { camera, gl } = useThree();\n//   useFrame(() => {\n//     orbitRef.current.update();\n//   });\n//   return (\n//     <orbitControls\n//       autoRotate\n//       maxPolarAngle={Math.PI / 3}\n//       minPolarAngle={Math.PI / 3}\n//       args={[camera, gl.domElement]}\n//       ref={orbitRef}\n//     />\n//   );\n// };\n// const Plane = () => (\n//   <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -0.5, 0]} receiveShadow>\n//     <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n//     <meshPhysicalMaterial attach=\"material\" color=\"white\" />\n//   </mesh>\n// );\n// const Box = () => {\n//   const [hovered, setHovered] = useState(false);\n//   const [active, setActive] = useState(false);\n//   const props = useSpring({\n//     scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n//     color: hovered ? \"blue\" : \"red\",\n//   });\n//   return (\n//     <a.mesh\n//       onPointerOver={() => setHovered(true)}\n//       onPointerOut={() => setHovered(false)}\n//       onClick={() => setActive(!active)}\n//       scale={props.scale}\n//       castShadow\n//     >\n//       <ambientLight />\n//       <spotLight position={[0, 5, 10]} penumbra={1} castShadow />\n//       <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n//       <a.meshPhysicalMaterial attach=\"material\" color={props.color} />\n//     </a.mesh>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"components\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","OrbitControls","Canvas","extend","useThree","useFrame","useSpring","a","THREE","Header","Projects","Contact","Nav","App"],"sources":["/Users/codenation/Documents/GitHub/portfolio/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Canvas, extend, useThree, useFrame } from \"@react-three/fiber\";\nimport { useSpring, a } from \"@react-spring/three\";\nimport * as THREE from \"three\";\n\nimport { Header, Projects, Contact } from \"./container\";\nimport { Nav } from \"./components\";\nimport \"./App.scss\";\n\n// extend({ OrbitControls });\n\n// const Controls = () => {\n//   const orbitRef = useRef();\n//   const { camera, gl } = useThree();\n\n//   useFrame(() => {\n//     orbitRef.current.update();\n//   });\n//   return (\n//     <orbitControls\n//       autoRotate\n//       maxPolarAngle={Math.PI / 3}\n//       minPolarAngle={Math.PI / 3}\n//       args={[camera, gl.domElement]}\n//       ref={orbitRef}\n//     />\n//   );\n// };\n\n// const Plane = () => (\n//   <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -0.5, 0]} receiveShadow>\n//     <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n//     <meshPhysicalMaterial attach=\"material\" color=\"white\" />\n//   </mesh>\n// );\n\n// const Box = () => {\n//   const [hovered, setHovered] = useState(false);\n//   const [active, setActive] = useState(false);\n//   const props = useSpring({\n//     scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n//     color: hovered ? \"blue\" : \"red\",\n//   });\n\n//   return (\n//     <a.mesh\n//       onPointerOver={() => setHovered(true)}\n//       onPointerOut={() => setHovered(false)}\n//       onClick={() => setActive(!active)}\n//       scale={props.scale}\n//       castShadow\n//     >\n//       <ambientLight />\n//       <spotLight position={[0, 5, 10]} penumbra={1} castShadow />\n//       <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n//       <a.meshPhysicalMaterial attach=\"material\" color={props.color} />\n//     </a.mesh>\n//   );\n// };\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"components\">\n        <Nav />\n        <Header />\n        <Projects />\n        <Contact />\n      </div>\n      {/* <Canvas\n        camera={{ position: [0, 0, 5] }}\n        onCreated={({ gl }) => {\n          gl.shadowMap.enabled = true;\n          gl.shadowMap.type = THREE.PCFShadowMap;\n        }}\n      >\n        <fog attach=\"fog\" args={[\"white\", 5, 15]} />\n        <Controls />\n        <Box />\n        <Plane />\n      </Canvas> */}\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,aAAT,QAA8B,2CAA9B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,QAAnC,QAAmD,oBAAnD;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,qBAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,QAA0C,aAA1C;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAO,YAAP,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAChB,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAsBD,CAvBD;;KAAMA,G;AAyBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}