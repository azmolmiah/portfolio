{"ast":null,"code":"import { pipe } from 'popmotion';\nimport { useRef } from 'react';\nimport { wrapHandler, addPointerEvent, AnimationType, isDragActive } from 'framer-motion';\n\nfunction useTap(isStatic, _a, visualElement) {\n  var whileTap = _a.whileTap,\n      onTapStart = _a.onTapStart,\n      onTap = _a.onTap,\n      onTapCancel = _a.onTapCancel,\n      onPointerDown = _a.onPointerDown;\n  var isTapEnabled = onTap || onTapStart || onTapCancel || whileTap;\n  var isPressing = useRef(false);\n  var cancelPointerEndListeners = useRef(null);\n  if (isStatic || !visualElement || !isTapEnabled) return {};\n\n  function removePointerEndListener() {\n    var _a;\n\n    (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n    cancelPointerEndListeners.current = null;\n  }\n\n  function checkPointerEnd() {\n    var _a;\n\n    removePointerEndListener();\n    isPressing.current = false;\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n    return !isDragActive();\n  }\n\n  function onPointerUp(event, info) {\n    if (!checkPointerEnd()) return;\n    /**\n     * We only count this as a tap gesture if the event.target is the same\n     * as, or a child of, this component's element\n     */\n\n    onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n  }\n\n  function onPointerCancel(event, info) {\n    if (!checkPointerEnd()) return;\n    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n  }\n\n  return {\n    onPointerDown: wrapHandler(function (event, info) {\n      var _a;\n\n      removePointerEndListener();\n      if (isPressing.current) return;\n      isPressing.current = true;\n      /**\n       * Only set listener to passive if there are no external listeners.\n       */\n\n      var options = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown)\n      };\n      cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, options), addPointerEvent(window, \"pointercancel\", onPointerCancel, options));\n      (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n      onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n      onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n    }, true)\n  };\n}\n\nexport { useTap };","map":{"version":3,"names":["pipe","useRef","wrapHandler","addPointerEvent","AnimationType","isDragActive","useTap","isStatic","_a","visualElement","whileTap","onTapStart","onTap","onTapCancel","onPointerDown","isTapEnabled","isPressing","cancelPointerEndListeners","removePointerEndListener","current","call","checkPointerEnd","animationState","setActive","Tap","onPointerUp","event","info","onPointerCancel","options","passive","window"],"sources":["/Users/codenation/Documents/GitHub/portfolio/frontend/node_modules/framer-motion-3d/dist/es/render/gestures/use-tap.mjs"],"sourcesContent":["import { pipe } from 'popmotion';\nimport { useRef } from 'react';\nimport { wrapHandler, addPointerEvent, AnimationType, isDragActive } from 'framer-motion';\n\nfunction useTap(isStatic, _a, visualElement) {\n    var whileTap = _a.whileTap, onTapStart = _a.onTapStart, onTap = _a.onTap, onTapCancel = _a.onTapCancel, onPointerDown = _a.onPointerDown;\n    var isTapEnabled = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = useRef(false);\n    var cancelPointerEndListeners = useRef(null);\n    if (isStatic || !visualElement || !isTapEnabled)\n        return {};\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    return {\n        onPointerDown: wrapHandler(function (event, info) {\n            var _a;\n            removePointerEndListener();\n            if (isPressing.current)\n                return;\n            isPressing.current = true;\n            /**\n             * Only set listener to passive if there are no external listeners.\n             */\n            var options = {\n                passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n            };\n            cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, options), addPointerEvent(window, \"pointercancel\", onPointerCancel, options));\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n            onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n            onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n        }, true),\n    };\n}\n\nexport { useTap };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}