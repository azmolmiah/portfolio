{"ast":null,"code":"var _jsxFileName = \"/Users/codenation/Documents/GitHub/portfolio/frontend/src/components/Objects/Objects.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useIntersect } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport React, { useMemo, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Objects = () => {\n  _s();\n\n  const {\n    height,\n    width\n  } = useThree(state => state.viewport);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pointLight\", {\n      color: \"blue\",\n      position: [8, -25, 5],\n      intensity: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      color: \"red\",\n      position: [0, -height * 2.25, 5],\n      intensity: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      color: \"red\",\n      position: [0, 1, 0],\n      children: /*#__PURE__*/_jsxDEV(\"boxGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      color: \"blue\",\n      position: [width / 6, -height * 1, 0],\n      children: /*#__PURE__*/_jsxDEV(\"dodecahedronGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      color: \"gray\",\n      position: [-width / 5, -height * 1.8, -2],\n      children: /*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [1, 1, 6]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      color: \"purple\",\n      position: [width / 4, -height * 2, 0],\n      children: /*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [1.5, 2, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      color: \"orange\",\n      position: [-width / 12, -height * 2.25, 0.5],\n      children: /*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [0.75, 2.5, 12]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Objects, \"/v61M4+0S/0WbkF39VbpVpbyOfk=\", false, function () {\n  return [useThree];\n});\n\n_c = Objects;\n\nconst Item = _ref => {\n  _s2();\n\n  let {\n    color,\n    position,\n    children\n  } = _ref;\n  const visible = useRef();\n  const ref = useIntersect(isVisible => visible.current = isVisible);\n  const [xRandomFactor, yRandomFactor] = useMemo(() => [(0.5 - Math.random()) * 0.5, (0.5 - Math.random()) * 0.5], []);\n  useFrame((_ref2, delta) => {\n    let {\n      clock\n    } = _ref2;\n    const elapsedTime = clock.getElapsedTime();\n    ref.current.rotation.x = elapsedTime * xRandomFactor;\n    ref.current.rotation.y = elapsedTime * yRandomFactor;\n    const scale = THREE.MathUtils.damp(ref.current.scale.x, visible.current ? 1.5 : 0.2, 5, delta);\n    ref.current.scale.set(scale, scale, scale);\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    position: position,\n    children: [children, /*#__PURE__*/_jsxDEV(\"meshPhysicalMaterial\", {\n      transparent: true,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Item, \"De2jvNqTrO/y6ke2ZgyNxkBYeow=\", false, function () {\n  return [useIntersect, useFrame];\n});\n\n_c2 = Item;\nexport default Objects;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Objects\");\n$RefreshReg$(_c2, \"Item\");","map":{"version":3,"names":["useIntersect","useFrame","useThree","React","useMemo","useRef","THREE","Objects","height","width","state","viewport","Item","color","position","children","visible","ref","isVisible","current","xRandomFactor","yRandomFactor","Math","random","delta","clock","elapsedTime","getElapsedTime","rotation","x","y","scale","MathUtils","damp","set"],"sources":["/Users/codenation/Documents/GitHub/portfolio/frontend/src/components/Objects/Objects.jsx"],"sourcesContent":["import { useIntersect } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport React, { useMemo, useRef } from \"react\";\nimport * as THREE from \"three\";\n\nconst Objects = () => {\n  const { height, width } = useThree((state) => state.viewport);\n\n  return (\n    <>\n      <pointLight color=\"blue\" position={[8, -25, 5]} intensity={20} />\n      <pointLight\n        color=\"red\"\n        position={[0, -height * 2.25, 5]}\n        intensity={10}\n      />\n      <Item color=\"red\" position={[0, 1, 0]}>\n        <boxGeometry />\n      </Item>\n      <Item color=\"blue\" position={[width / 6, -height * 1, 0]}>\n        <dodecahedronGeometry />\n      </Item>\n      <Item color=\"gray\" position={[-width / 5, -height * 1.8, -2]}>\n        <coneGeometry args={[1, 1, 6]} />\n      </Item>\n      <Item color=\"purple\" position={[width / 4, -height * 2, 0]}>\n        <coneGeometry args={[1.5, 2, 3]} />\n      </Item>\n      <Item color=\"orange\" position={[-width / 12, -height * 2.25, 0.5]}>\n        <coneGeometry args={[0.75, 2.5, 12]} />\n      </Item>\n    </>\n  );\n};\n\nconst Item = ({ color, position, children }) => {\n  const visible = useRef();\n  const ref = useIntersect((isVisible) => (visible.current = isVisible));\n  const [xRandomFactor, yRandomFactor] = useMemo(\n    () => [(0.5 - Math.random()) * 0.5, (0.5 - Math.random()) * 0.5],\n    []\n  );\n\n  useFrame(({ clock }, delta) => {\n    const elapsedTime = clock.getElapsedTime();\n\n    ref.current.rotation.x = elapsedTime * xRandomFactor;\n    ref.current.rotation.y = elapsedTime * yRandomFactor;\n\n    const scale = THREE.MathUtils.damp(\n      ref.current.scale.x,\n      visible.current ? 1.5 : 0.2,\n      5,\n      delta\n    );\n    ref.current.scale.set(scale, scale, scale);\n  });\n\n  return (\n    <mesh ref={ref} position={position}>\n      {children}\n      <meshPhysicalMaterial transparent color={color} />\n    </mesh>\n  );\n};\n\nexport default Objects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}